/**
 * 2869 달팽이는 올라가고 싶다
 * 높이가 V미터인 나무막대를 올라갈거다.
 * 낮에 A미터 올라가고, 밤에 B만큼 내려간다
 * 정상도착하면 미끄러지지 않음.
 * 
 * 나무막대 올라가려면 며칠걸릴까
 * a,b,v는 1~10억, b는 a보다 작다
 * 반복 - 시간 초과
 */
// const fs = require('fs')
// const input = fs.readFileSync('/dev/stdin').toString().trim().split(' ');
const input = [
  '5',
  '4',
  '21',
]
const [A, B, V] = input.map(Number)

// 2 1 5 = 4
// 5 1 6 = 2

// 4 1 21 = 7
// 4 2 21 = 10
// 4 3 21 = 18

// 5 1 21 = 5
// 올라가는 길이: 5
// 하루에 올라갈 수있는 길이 : 5-1 = 4
// 21에 도착하는건? 21 - 5 = 16에서 출발 할때
// 4씩갈때 -> 16 / 4 = 4
// 4 + 1(올라가기만 하니까) = 5

// 5 2 21 = 7
// 올라가는 길이: 5
// 하루에 올라갈 수있는 길이 : 5-2 = 3
// 21에 도착하는건? 21 - 5 = 16에서 출발 할때
// 3씩갈때 -> 16 / 3 = 5 -> 16보다 커야 도착하니까 올림처리하면 6
// 6 + 1(올라가기만 하니까) = 7

// 5 3 21 = 9
// 올라가는 길이: 5
// 하루에 올라갈 수있는 길이 : 5-3 = 2
// 21에 도착하는건? 21 - 5 = 16에서 출발 할때
// 2씩갈때 -> 16 / 2 = 8
// 8 + 1(올라가기만 하니까) = 9

// 5 4 21 = 17
// 올라가는 길이: 5
// 하루에 올라갈 수있는 길이 : 5-4 = 1
// 21에 도착하는건? 21 - 5 = 16에서 출발 할때
// 1씩갈때 -> 16 / 1 = 16
// 16 + 1(올라가기만 하니까) = 9


const solution = (a, b, v) => {
  const canUp = a - b;
  const canArrivePos = v - a;
  const days = Math.ceil(canArrivePos / canUp) + 1

  return days;

}
console.log(solution(A, B, V));